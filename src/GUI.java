/* GUI Add:
     public ConversionString s;
     
     input.addFocusListener (new java.awt.event.FocusAdapter(){
                public void focusGained (java.awt.event.FocusEvent evt){
                        input.selectAll();
                }
     });
     
     private void inputActionPerformed(java.awt.event.ActionEvent evt) {                                      
     // TODO add your handling code here:
        s = new ConversionString (input.getText());
        if (s.inputUnit.type != s.outputUnit.type)
                input.setText("The units entered are not of the same type!");
        else {
                Unit1Name.setText(s.inputUnit.fullName);
                Unit2Name.setText(s.outputUnit.fullName);
                Unit1Value.setText(Double.toString(s.inputNum));
                Unit2Value.setText(Double.toString(s.outputNum));
        }
     }
 */
public class GUI extends javax.swing.JFrame {

    public ConversionString s;

    /** Creates new form GUI */
    public GUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        input = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        Unit1Name = new javax.swing.JLabel();
        Unit2Name = new javax.swing.JLabel();
        Unit1Value = new javax.swing.JTextField();
        Unit2Value = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Convertor");

        input.setText("Enter your conversion statement here");
        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });
        input.addFocusListener (new java.awt.event.FocusAdapter(){
                public void focusGained (java.awt.event.FocusEvent evt){
                        input.selectAll();
                }
        });

        Unit1Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Unit1Name.setText("Unit");

        Unit2Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Unit2Name.setText("Unit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(input, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Unit1Value, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Unit2Value, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Unit1Name, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Unit2Name, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Unit1Name)
                    .addComponent(Unit2Name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Unit2Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Unit1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        s = new ConversionString (input.getText());
        if (s.inputUnit.type != s.outputUnit.type)
                input.setText("The units entered are not of the same type!");
        else {
                Unit1Name.setText(s.inputUnit.fullName);
                Unit2Name.setText(s.outputUnit.fullName);
                Unit1Value.setText(Double.toString(s.inputNum));
                Unit2Value.setText(Double.toString(s.outputNum));
        }
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JLabel Unit1Name;
    private javax.swing.JTextField Unit1Value;
    private javax.swing.JLabel Unit2Name;
    private javax.swing.JTextField Unit2Value;
    private javax.swing.JTextField input;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration
}
